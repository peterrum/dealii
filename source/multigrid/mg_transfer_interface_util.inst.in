// ---------------------------------------------------------------------
//
// Copyright (C) 2019 by the deal.II authors
//
// This file is part of the deal.II library.
//
// The deal.II library is free software; you can use it, redistribute
// it, and/or modify it under the terms of the GNU Lesser General
// Public License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
// The full text of the license can be found in the file LICENSE.md at
// the top level directory of deal.II.
//
// ---------------------------------------------------------------------



for (deal_II_dimension : DIMENSIONS; S1 : REAL_SCALARS)
  {
    template void MGTransferUtil::setup_global_coarsening_transfer(
      const DoFHandler<deal_II_dimension> &dof_handler_fine,
      const DoFHandler<deal_II_dimension> &dof_handler_coarse,
      const AffineConstraints<S1> &        constraint_fine,
      const AffineConstraints<S1> &        constraint_coarse,
      Transfer<deal_II_dimension, S1> &    transfer);

    template void MGTransferUtil::setup_global_coarsening_transfer(
      const hp::DoFHandler<deal_II_dimension> &dof_handler_fine,
      const hp::DoFHandler<deal_II_dimension> &dof_handler_coarse,
      const AffineConstraints<S1> &            constraint_fine,
      const AffineConstraints<S1> &            constraint_coarse,
      Transfer<deal_II_dimension, S1> &        transfer);

    template void MGTransferUtil::setup_polynomial_transfer(
      const DoFHandler<deal_II_dimension> &dof_handler_fine,
      const DoFHandler<deal_II_dimension> &dof_handler_coarse,
      const AffineConstraints<S1> &        constraint_fine,
      const AffineConstraints<S1> &        constraint_coarse,
      Transfer<deal_II_dimension, S1> &    transfer);

    template void MGTransferUtil::setup_polynomial_transfer(
      const hp::DoFHandler<deal_II_dimension> &dof_handler_fine,
      const hp::DoFHandler<deal_II_dimension> &dof_handler_coarse,
      const AffineConstraints<S1> &            constraint_fine,
      const AffineConstraints<S1> &            constraint_coarse,
      Transfer<deal_II_dimension, S1> &        transfer);
  }
