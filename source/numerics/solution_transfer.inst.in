// ------------------------------------------------------------------------
//
// SPDX-License-Identifier: LGPL-2.1-or-later
// Copyright (C) 2010 - 2021 by the deal.II authors
//
// This file is part of the deal.II library.
//
// Part of the source code is dual licensed under Apache-2.0 WITH
// LLVM-exception OR LGPL-2.1-or-later. Detailed license information
// governing the source code and code contributions can be found in
// LICENSE.md and CONTRIBUTING.md at the top level directory of deal.II.
//
// ------------------------------------------------------------------------


for (VEC : VECTOR_TYPES; deal_II_dimension : DIMENSIONS;
     deal_II_space_dimension : SPACE_DIMENSIONS)
  {
#if deal_II_dimension <= deal_II_space_dimension
    template class Legacy::
      SolutionTransfer<deal_II_dimension, VEC, deal_II_space_dimension>;
#endif
  }

for (deal_II_dimension : DIMENSIONS; deal_II_space_dimension : SPACE_DIMENSIONS)
  {
#if deal_II_dimension <= deal_II_space_dimension
    template class SolutionTransfer<deal_II_dimension,
                                    ::dealii::Vector<double>,
                                    deal_II_space_dimension>;
    template class SolutionTransfer<deal_II_dimension,
                                    ::dealii::BlockVector<double>,
                                    deal_II_space_dimension>;
    template class SolutionTransfer<
      deal_II_dimension,
      ::dealii::LinearAlgebra::distributed::Vector<double>,
      deal_II_space_dimension>;
    template class SolutionTransfer<
      deal_II_dimension,
      ::dealii::LinearAlgebra::distributed::Vector<float>,
      deal_II_space_dimension>;
    template class SolutionTransfer<
      deal_II_dimension,
      ::dealii::LinearAlgebra::distributed::BlockVector<double>,
      deal_II_space_dimension>;
    template class SolutionTransfer<
      deal_II_dimension,
      ::dealii::LinearAlgebra::distributed::BlockVector<float>,
      deal_II_space_dimension>;


#  ifdef DEAL_II_WITH_PETSC
    template class SolutionTransfer<deal_II_dimension,
                                    PETScWrappers::MPI::Vector,
                                    deal_II_space_dimension>;
    template class SolutionTransfer<deal_II_dimension,
                                    PETScWrappers::MPI::BlockVector,
                                    deal_II_space_dimension>;
#  endif

#  ifdef DEAL_II_WITH_TRILINOS
    template class SolutionTransfer<deal_II_dimension,
                                    TrilinosWrappers::MPI::Vector,
                                    deal_II_space_dimension>;
    template class SolutionTransfer<deal_II_dimension,
                                    TrilinosWrappers::MPI::BlockVector,
                                    deal_II_space_dimension>;
#  endif

#endif
  }
